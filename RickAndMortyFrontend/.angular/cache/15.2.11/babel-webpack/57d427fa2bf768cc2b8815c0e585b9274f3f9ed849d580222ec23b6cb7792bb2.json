{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/rick-and-morty.service\";\nimport * as i2 from \"@angular/common\";\nfunction EpisodeListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"img\", 2);\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const episode_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", episode_r1.image, i0.ɵɵsanitizeUrl)(\"alt\", episode_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(episode_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Air Date: \", episode_r1.air_date, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Episode: \", episode_r1.episode, \"\");\n  }\n}\nexport class EpisodeListComponent {\n  constructor(rickAndMortyService) {\n    this.rickAndMortyService = rickAndMortyService;\n    this.episodes = [];\n  }\n  ngOnInit() {\n    this.rickAndMortyService.getEpisodes().subscribe(data => {\n      this.episodes = data.map(episode => ({\n        ...episode,\n        image: this.getRandomCharacterImage(episode.characters)\n      }));\n    });\n  }\n  getRandomCharacterImage(characters) {\n    if (characters.length === 0) {\n      return 'https://via.placeholder.com/150'; // Placeholder image if no characters\n    }\n\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    const characterUrl = characters[randomIndex];\n    const characterId = characterUrl.split('/').pop(); // Extract character ID from URL\n    return `https://rickandmortyapi.com/api/character/avatar/${characterId}.jpeg`;\n  }\n  static {\n    this.ɵfac = function EpisodeListComponent_Factory(t) {\n      return new (t || EpisodeListComponent)(i0.ɵɵdirectiveInject(i1.RickAndMortyService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EpisodeListComponent,\n      selectors: [[\"app-episode-list\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"episode-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"episode-card\"], [3, \"src\", \"alt\"]],\n      template: function EpisodeListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, EpisodeListComponent_div_0_Template, 8, 5, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.episodes);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\".episode-card[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  border: 1px solid #ccc;\\r\\n  border-radius: 8px;\\r\\n  padding: 10px;\\r\\n  margin: 10px;\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n  .episode-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\r\\n    width: 150px;\\r\\n    height: 150px;\\r\\n    border-radius: 8px;\\r\\n    object-fit: cover;\\r\\n    margin-bottom: 10px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9lcGlzb2RlLWxpc3QvZXBpc29kZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixZQUFZO0VBQ1osWUFBWTtBQUNkOztFQUVFO0lBQ0UsWUFBWTtJQUNaLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtFQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5lcGlzb2RlLWNhcmQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgbWFyZ2luOiAxMHB4O1xyXG4gIHdpZHRoOiAyMDBweDtcclxufVxyXG5cclxuICAuZXBpc29kZS1jYXJkIGltZyB7XHJcbiAgICB3aWR0aDogMTUwcHg7XHJcbiAgICBoZWlnaHQ6IDE1MHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IAAAA,8BAA2D;IACzDA,yBAAkD;IAClDA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,yBAAG;IAAAA,YAAgC;IAAAA,iBAAI;IACvCA,yBAAG;IAAAA,YAA8B;IAAAA,iBAAI;;;;IAHhCA,eAAqB;IAArBA,wDAAqB;IACtBA,eAAkB;IAAlBA,qCAAkB;IACnBA,eAAgC;IAAhCA,4DAAgC;IAChCA,eAA8B;IAA9BA,0DAA8B;;;ACInC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,mBAAwC;IAAxC,wBAAmB,GAAnBA,mBAAmB;IAFvC,aAAQ,GAAU,EAAE;EAE4C;EAEhEC,QAAQ;IACN,IAAI,CAACD,mBAAmB,CAACE,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAS,IAAI;MAC7D,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACE,GAAG,CAAEC,OAAY,KAAM;QAC1C,GAAGA,OAAO;QACVC,KAAK,EAAE,IAAI,CAACC,uBAAuB,CAACF,OAAO,CAACG,UAAU;OACvD,CAAC,CAAC;IACL,CAAC,CAAC;EACJ;EAEAD,uBAAuB,CAACC,UAAoB;IAC1C,IAAIA,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MAC3B,OAAO,iCAAiC,CAAC,CAAC;;;IAE5C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGL,UAAU,CAACC,MAAM,CAAC;IACjE,MAAMK,YAAY,GAAGN,UAAU,CAACE,WAAW,CAAC;IAC5C,MAAMK,WAAW,GAAGD,YAAY,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAAC,CAAC;IACnD,OAAO,oDAAoDF,WAAW,OAAO;EAC/E;;;uBAtBWnB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAsB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDRjC3B,qEAKM;;;UALmBA,sCAAW","names":["i0","EpisodeListComponent","constructor","rickAndMortyService","ngOnInit","getEpisodes","subscribe","data","episodes","map","episode","image","getRandomCharacterImage","characters","length","randomIndex","Math","floor","random","characterUrl","characterId","split","pop","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\despinoza\\source\\repos\\RickAndMortyBFF\\RickAndMortyFrontend\\src\\app\\components\\episode-list\\episode-list.component.html","C:\\Users\\despinoza\\source\\repos\\RickAndMortyBFF\\RickAndMortyFrontend\\src\\app\\components\\episode-list\\episode-list.component.ts"],"sourcesContent":["<div *ngFor=\"let episode of episodes\" class=\"episode-card\">\r\n  <img [src]=\"episode.image\" [alt]=\"episode.name\" />\r\n  <h3>{{ episode.name }}</h3>\r\n  <p>Air Date: {{ episode.air_date }}</p>\r\n  <p>Episode: {{ episode.episode }}</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { RickAndMortyService } from '../../services/rick-and-morty.service';\n\n@Component({\n  selector: 'app-episode-list',\n  templateUrl: './episode-list.component.html',\n  styleUrls: ['./episode-list.component.css']\n})\nexport class EpisodeListComponent implements OnInit {\n  episodes: any[] = [];\n\n  constructor(private rickAndMortyService: RickAndMortyService) { }\n\n  ngOnInit(): void {\n    this.rickAndMortyService.getEpisodes().subscribe((data: any) => {\n      this.episodes = data.map((episode: any) => ({\n        ...episode,\n        image: this.getRandomCharacterImage(episode.characters),\n      }));\n    });\n  }\n\n  getRandomCharacterImage(characters: string[]): string {\n    if (characters.length === 0) {\n      return 'https://via.placeholder.com/150'; // Placeholder image if no characters\n    }\n    const randomIndex = Math.floor(Math.random() * characters.length);\n    const characterUrl = characters[randomIndex];\n    const characterId = characterUrl.split('/').pop(); // Extract character ID from URL\n    return `https://rickandmortyapi.com/api/character/avatar/${characterId}.jpeg`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}